import os
from flask import Flask, request
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import asyncio

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")

# –°–æ–∑–¥–∞–µ–º Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

# –ü—Ä–æ—Å—Ç–æ–π —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±—Ö—É–∫–∞
@app.route(f"/webhook/{TELEGRAM_TOKEN}", methods=["POST"])
def telegram_webhook():
    data = request.get_json()
    update = Update.de_json(data, application.bot)
    asyncio.create_task(application.process_update(update))
    return "", 204

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞
async def init_webhook():
    global application
    application = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    application.add_handler(CommandHandler("start", start))

    print("‚úÖ –ù–æ–≤—ã–π –∫–æ–¥ –∑–∞–≥—Ä—É–∂–µ–Ω! (init_webhook)")
    await application.initialize()
    await application.start()
    await application.bot.set_webhook(url=f"{os.environ['RENDER_EXTERNAL_URL']}/webhook/{TELEGRAM_TOKEN}")
    print("üöÄ –í–µ–±—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    asyncio.run(init_webhook())
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))
